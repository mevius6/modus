@layer props {
  @layer
    sizes,
    ratios,
    spacers,
    gutters,
    borders,
    shadows,
    animations,
    filters,
    shapes,
    helpers;
}

/**
 * Defaults?.. (meanings)
 * https://www.w3.org/TR/css-cascade/#cascading-origins
 * https://meiert.com/en/blog/user-agent-style-sheets/
 * https://drafts.csswg.org/css-scoping/#default-element-styles
 * See
   → https://nerdy.dev/BYO-CSS-tokens-to-tailwind-v4s-new-CSS-centric-config
   → https://github.com/argyleink/twop/blob/main/app/tailwind.css
   → https://github.com/tailwindlabs/tailwindcss/blob/next/packages/tailwindcss/theme.css
 */

/* Custom properties on :root pseudo-class
   why -> https://drafts.csswg.org/selectors/#the-root-pseudo
   not -> https://github.com/w3c/csswg-drafts/issues/6641 */

/* TODO Turn into utility-first classes */
@layer props.type {
  :where(html) {
    /* FIXME
       to Level AA
       --tracking: calc(var(--font-size, 16px) * var(--i));
       --i: .015; ~ 0.24px
       --i: .030; ~ 0.48px
       --i: .060; ~ 0.96px
       --i: .120; ~ 1.92px <-- success criterion
       by https://www.w3.org/TR/WCAG22/#text-spacing */

    /* Tracking */
    --letter-spacing-0: .010em;    /* ~ .16px */
    --letter-spacing-1: .025em;    /* ~ .40px */
    --letter-spacing-2: .030em;    /* ~ .48px */
    --letter-spacing-3: .0394em;   /* ~ .63px */
    --letter-spacing-4: .050em;
    --letter-spacing-5: .075em;
    --letter-spacing-6: .078125em; /* ~ 1.25px */
    --letter-spacing-7: .09375em;  /* ~ 1.5px */
    --letter-spacing-8: .150em;

    /* TODO Define negative spacing with `sign()` function */
    --neg-tracking-1: calc(var(--letter-spacing-0) * -1);
    --neg-tracking-2: calc(var(--letter-spacing-2) * -1);

    /* For instance, the “tight not touching” style
       → https://fonts.google.com/knowledge/history_of_type/ the_tight_not_touching_style
       → https://hex.xyz/HEX_Franklin/Tyght/
     */
    --tracking-tnt: calc(var(--letter-spacing-5) * -1);

    /* Interlineage */
    --lh-tight: 1cap;
    --lh-equals: 1; /* condensed-ultra */
    --lh-precise: 1.1;
    --lh-thinest: 1.15;
    --lh-eighty: 1.25; /* condensed */
    --lh-default: 1.5; /* default */
    --leading: var(--lh-default);

    /* System defaults
       https://drafts.csswg.org/css-fonts-4/#generic-font-families
     */
    --ui-serif: ui-serif, serif;
    --ui-sans: system-ui, sans-serif;
    --ui-mono: ui-monospace, monospace;

    /* Fallback */
    --font-stack: system-ui, -apple-system, BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      "Helvetica Neue",
      Arial,
      "Noto Sans",
      "Liberation Sans",
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      "Segoe UI Symbol",
      "Noto Color Emoji";
    --font-weight-1: 100;
    --font-weight-2: 200;
    --font-weight-3: 300;
    --font-weight-4: 400;
    --font-weight-5: 500;
    --font-weight-6: 600;
    --font-weight-7: 700;
    --font-weight-8: 800;
    --font-weight-9: 900;
  }
}

@layer props.sizes {
  /* ----------------------------------
   * Breakpoint widths
   * ---------------------------------- */

  :where(html) {
    /**
     * Refs:
     * → https://getbootstrap.com/docs/5.0/layout/breakpoints/
     * → https://primer.style/design/foundations/layout#breakpoints
     * → https://open-props.style/#media-queries
     */

    /* Alternate: [xs: 320, sm: 640, md: 768, lg: 960, xl: 1280, xxl: 1920] */
    --width-xs: 20em;
    --width-sm: 34em;
    --width-md: 48em;
    --width-lg: 62em;
    --width-xl: 80em;

    /* (992 - 16 * 2) = 960 */
    --container-width: calc(var(--width-lg) - var(--gutter) * 2);
    --container-sm: 34rem;    /* ~ 544px */
    --container-md: 48rem;    /* ~ 768px */
    --container-lg: 63.25rem; /* ~ 1012px */
    --container-xl: 80rem;    /* ~ 1280px */

    /* https://www.w3.org/TR/WCAG22/#visual-presentation */
    --max-article-width: 80ch;
  }
}

@layer props.ratios {
  /* ----------------------------------
   * Aspect ratios
   * ---------------------------------- */

  :where(html) {
    /**
     * Square    := 1:1
     * Portrait  := 1:2 | 2:3 | 3:4 | 4:5 | 9:16
     * Landscape := 2:1 | 3:2 | 4:3 | 16:9
     */
    --ratio-square: 1;
    --ratio-landscape: 4/3;
    --ratio-portrait: 3/4;
    --ratio-widescreen: 16/9;
    --ratio-ultrawide: 18/5;
    --ratio-golden: 1.6180/1;
    --ratio-1: 1;
    --ratio-2: 4/3;  /* 1.333 (SD) */
    --ratio-3: 16/9; /* 1.788 (HD) */
  }
}

@layer props.spacers {
  /* ----------------------------------
   * Spacing scale
   * ---------------------------------- */

   /* TODO: https://drafts.csswg.org/css-values/#exponent-funcs */
  :where(html) {
    --denser: calc(var(--spacer) * 0.5); /* 0.25rem; ~ 4px */
    --spacer: 0.5rem; /* <-- Step size ~ 8px */
    --spacer-2x: calc(var(--spacer) * 2);   /* 1rem;   | ~ 16px */
    --spacer-3x: calc(var(--spacer) * 3);   /* 1.5rem; | ~ 24px */
    --spacer-4x: calc(var(--spacer) * 4);   /* 2rem;   | ~ 32px */
    --spacer-5x: calc(var(--spacer) * 5);   /* 2.5rem; | ~ 40px */
    --spacer-6x: calc(var(--spacer) * 6);   /* 3rem;   | ~ 48px */
    --spacer-8x: calc(var(--spacer) * 8);   /* 4rem;   | ~ 64px */
    --spacer-10x: calc(var(--spacer) * 10); /* 5rem;   | ~ 80px */
    --spacer-12x: calc(var(--spacer) * 12); /* 6rem;   | ~ 96px = 1in = 2.54cm */
    --spacer-14x: calc(var(--spacer) * 14); /* 7rem;   | ~ 112px */
    --spacer-16x: calc(var(--spacer) * 16); /* 8rem;   | ~ 128px */
    --spacer-20x: calc(var(--spacer) * 20); /* 10rem;  | ~ 160px */

    /* calc → https://jxnblk.github.io/formula/ */
    --em-spacer-1: 0.0625em;  /* 1/16 */
    --em-spacer-2: 0.125em;   /* 1/8 */
    --em-spacer-3: 0.25em;    /* 1/4 */
    --em-spacer-4: 0.375em;   /* 3/8 */
    --em-spacer-5: 0.5em;     /* 1/2 */
    --em-spacer-6: 0.75em;    /* 3/4 */
  }
}

@layer props.gutters {
  /* ----------------------------------
   * Gutters
   * ---------------------------------- */

  :where(html) {
    /* spec → https://drafts.csswg.org/css-align-3/#gutter */
    --gutter-md: var(--spacer-2x);
    --gutter-lg: var(--spacer-3x);
    --gutter-condensed: var(--spacer-2x);
    --gutter-spacious-md: var(--spacer-2x);
    --gutter-spacious-lg: var(--spacer-4x);
    --gutter-spacious-xl: var(--spacer-5x);
    --gutter: var(--gutter-md);
  }
}

@layer props.borders {
  /* ----------------------------------
   * Box Decorations
   * ---------------------------------- */

  /* https://drafts.csswg.org/css-backgrounds/#borders
     https://drafts.csswg.org/css-backgrounds/#corners */

  :where(html) {
    /* Line Thickness */
    --border-width: var(--line-hair);

    /* Set the props aliases, for instance: */
    --line-hair: 0.5px; /* ~ */ --hairline: var(--line-hair);
    --line-thin: 1px;
    --line-medium: 3px; /* ~ */ --line-md: var(--line-medium);
    --line-thick: 5px;

    /* Line Patterns */
    --border-style: var(--line-style, solid);
    --border-color: hsl(var(--gray));
    --border: var(--border-width) var(--border-style) var(--border-color);

    /* Corner Shaping → https://moderncss.dev/pure-css-shapes-3-ways/ */
    --caret-size: 10px;
    --caret-up: 0 7px var(--caret-size) 7px;
    --caret-right: 7px 0 7px var(--caret-size);

    /* Rounded Corners */
    --border-radius: var(--border-radius-2);

    /* Fixed */
    --border-radius-1: 4px;
    --border-radius-2: 6px;
    --border-radius-3: 8px;

    /* Responsive */
    --radius-1: 0.5rem;
    --radius-2: 1rem;

    /* Max Curve Radii, e.g. for a pill/stadium shaped button/c2a */
    /* https://en.wikipedia.org/wiki/Pi_Day
       https://en.wikipedia.org/wiki/Turn_(angle)#Tau_proposals
       https://web.dev/articles/css-trig-functions
    */
    --radius-x: calc(var(--big-int) * 1px);
    --radius-xx: 1000rem;
    --radius-xxx: 1e5px;
  }
}

@layer props.shadows {
  /* ----------------------------------
   * Shadows
   * ---------------------------------- */

  /* Generators for smooth layered shadows
     → https://shadows.brumm.af/
     → https://www.joshwcomeau.com/shadow-palette/ */

  :where(html) {
    --shadow-a: .04;
    --shadow-sm: 0 1px 0 var(--shadow-color);
    --shadow-a: .15;
    --shadow-md: 0 3px 6px var(--shadow-color);
    --shadow-a: .20;
    --shadow-lg: 0 8px 24px var(--shadow-color);
    --shadow-a: .30;
    --shadow-xl: 0 12px 28px var(--shadow-color);

    /* Fine-tune the HSL color with strength/intensity (i.e. alpha-value)
       → https://tobiasahlin.com/blog/layered-smooth-box-shadows/ */

    --shadow-hsl: var(--black);
    --shadow-color: hsl(var(--shadow-hsl) / var(--shadow-a, .125));
    --shadow-strength: 1%;
    --shadow-1: 0 1px 2px -1px hsl(
      var(--shadow-color)/calc(var(--shadow-strength) + 9%)
    );

    /* TODO Define --shadow-(2, 3, etc.) */

    --shadow-elevation-low:
      0.3px 0.5px 0.7px var(--shadow-color),
      0.4px 0.8px 1px -1.2px var(--shadow-color),
      1px 2px 2.5px -2.5px var(--shadow-color);
    --shadow-elevation-medium:
      0.3px 0.5px 0.7px var(--shadow-color),
      0.8px 1.6px 2px -0.8px var(--shadow-color),
      2.1px 4.1px 5.2px -1.7px var(--shadow-color),
      5px 10px 12.6px -2.5px var(--shadow-color);
    --shadow-elevation-high:
      0.3px 0.5px 0.7px var(--shadow-color),
      1.5px 2.9px 3.7px -0.4px var(--shadow-color),
      2.7px 5.4px 6.8px -0.7px var(--shadow-color),
      4.5px 8.9px 11.2px -1.1px var(--shadow-color),
      7.1px 14.3px 18px -1.4px var(--shadow-color),
      11.2px 22.3px 28.1px -1.8px var(--shadow-color),
      17px 33.9px 42.7px -2.1px var(--shadow-color),
      25px 50px 62.9px -2.5px var(--shadow-color);
  }

  :where(html[data-theme-style=light]) {
    --shadow-color: 220 3% 15%;
    --shadow-strength: 1%;
  }

  :where(html[data-theme-style=dark]) {
    --shadow-color: 220 40% 2%;
    --shadow-strength: 25%;
  }
}

/* TODO Define transition vals, animation props and @keyframes */
@layer props.animations {
  /* See
     ⊛ https://github.com/primer/css/blob/main/src/utilities/animations.scss
     ⊛ https://github.com/argyleink/open-props/blob/main/src/
       ├╴props.animations.css
       └╴props.easing.css
     ⊛ https://github.com/argyleink/transition.css
     ⊛ https://www.transition.style/ */

  :where(html) {
    /* ----------------------------------
     * Speed
     * ---------------------------------- */

    --duration-0: 75ms;
    --duration-1: 100ms;
    --duration-2: 150ms;
    --duration-3: 200ms;
    --duration-4: 300ms;
    --duration-5: 400ms;
    --duration-6: 500ms;
    --duration-7: 700ms;
    --duration-8: 1000ms;
    --duration-9: 1200ms;
    --duration: 0.4s; /* typically in the range of 150–500 ms */

    /* 🤟🏻💀🪽 https://github.com/argyleink/open-props/blob/main/src/extra/durations.css */
    --leap: 61s;

    /* ----------------------------------
     * Easing
     * ---------------------------------- */

    --ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);
    --ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
    --ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);

    /* Eases w/ power of 2 (POT) */
    --ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);
    --ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);
    --ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);

    /* Eases w/ power of 3 */
    --ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);
    --ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);
    --ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);

    /* Eases w/ power of 4 */
    --ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);
    --ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);
    --ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1);

    /* https://cubic-bezier.com/#.2,1,.3,1 */
    --easing: cubic-bezier(0.2, 1, 0.3, 1);
    --ease-spring: cubic-bezier(0.4, 0, 0.7, 1.8);

    /* TODO */
    /* --ease-N or --easing-N */
    --ease-1: cubic-bezier(.25,0,.5,1);
    --ease-2: cubic-bezier(.25,0,.4,1);
    --ease-3: cubic-bezier(.25,0,.3,1);
    --ease-4: cubic-bezier(.25,0,.2,1);
    --ease-5: cubic-bezier(.25,0,.1,1);

    /* TODO */
    /* --anim-N or --animation-N */
    --anim-fade-in: fade-in .5s var(--ease-3);
    --anim-fade-out: fade-out .5s var(--ease-3);
    --anim-fade-1: var(--anim-fade-in);
    --anim-fade-0: var(--anim-fade-out);

    /* loops */
    --_ease-out: cubic-bezier(0, 0, .3, 1);
    --_ease-squish: var(--ease-elastic-in-out, cubic-bezier(.5, -.3, .1, 1.5));
    --animation-spin: spin 2s linear infinite;
    --animation-ping: ping 5s var(--_ease-out) infinite;
    --animation-blink: blink 1s var(--_ease-out) infinite;
    --animation-float: float 3s var(--_ease-out) infinite;
    --animation-bounce: bounce 2s var(--_ease-squish) infinite;
    --animation-pulse: pulse 2s var(--_ease-out) infinite;

    /* TODO CSS Physics with Math
       → https://codepen.io/argyleink/pen/KKLaNdd */
  }

  @keyframes fade-in {
    to { opacity:1 }
  }
  @keyframes fade-out {
    to { opacity:0 }
  }

  @keyframes spin {
    to { transform: rotate(1turn) }
  }

  @keyframes ping {
    90%, 100% {
      opacity: 0;
      transform: scale(2);
    }
  }

  @keyframes blink {
    0%, 100% {
      opacity: 1
    }

    50% { opacity: .5 }
  }

  @keyframes float {
    50% { transform: translateY(-25%) }
  }

  @keyframes pulse {
    50% { transform: scale(.9,.9) }
  }
}

@layer props.filters {
  /* https://drafts.fxtf.org/filter-effects-2/#BackdropFilterProperty */

  /* ----------------------------------
   * Blurring
   * ---------------------------------- */

  :where(html) {
    --blur-xs: 5px;
    --blur-sm: 8px;
    --blur-md: 20px;
    --blur-lg: 30px;
    --blur-avg: 40px;
    --blur-max: 135px;

    /* https://web.dev/backdrop-filter/ */
    --blur-os: 10px; /* (macOS | iOS | Windows 10)-like frosted glass fx */
    --blur: var(--blur-os);
    --smooth-glass: blur(9px) brightness(1.2); /* smooth glass effect */
  }
}

@layer props.shapes {
  /* Gens:
     → https://bennettfeely.com/clippy/
     → https://codepen.io/stoumann/full/abZxoOM
     → https://yoksel.github.io/relative-clip-path/
     → https://augmented-ui.com/mixinmixer/
     → https://css-doodle.com/shapes/ */

  /* Refs:
     → https://web.dev/css-clipping/
     → https://css-tricks.com/almanac/properties/c/clip-path/ */

  /* ✁---------------------------------
   * Clipping Paths
   * ✃--------------------------------- */

  :where(html) {
    --shape-circle: circle(50% at 50% 50%);
    --shape-square: polygon(0% 0%, 0% 100%, 100% 100%, 100% 0%);
    --shape-plus:
      polygon(
        35% 0%, 65% 0%, 65% 35%, 100% 35%,
        100% 60%, 65% 60%, 65% 100%, 35% 100%,
        35% 60%, 0% 60%, 0% 35%, 35% 35%
      );
    --shape-cross:
      polygon(
        20% 0%, 0% 20%, 30% 50%, 0% 80%,
        20% 100%, 50% 70%, 80% 100%, 100% 80%,
        70% 50%, 100% 20%, 80% 0%, 50% 30%
      );
    --shape-blinds:
      polygon(
        0% 5%,100% 5%,100% 25%,0% 25%,
        0% 40%,100% 40%,100% 60%,0% 60%,
        0% 75%,100% 75%,100% 95%,0% 95%
      );
    --shape-star:
      polygon(
        50% 0%, 61% 35%,
        98% 35%, 68% 57%,
        79% 91%, 50% 70%,
        21% 91%, 32% 57%,
        2% 35%, 39% 35%
      );

    /* Spec → https://drafts.csswg.org/css-shapes-1/#basic-shape-interpolation */

    /* Polygonal (pointing) shapes that may be morphing between: */
    /* 5-angled */
    --shape-pentagon:
      polygon(50% 0%, 100% 38%, 82% 100%, 18% 100%, 0% 38%);
    --shape-point-left:
      polygon(25% 0%, 100% 0%, 100% 100%, 25% 100%, 0% 50%);
    --shape-point-right:
      polygon(0% 0%, 75% 0%, 100% 50%, 75% 100%, 0% 100%);

    /* 6-angled */
    --shape-hexagon:
      polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    --shape-chev-right:
      polygon(75% 0%, 100% 50%, 75% 100%, 0% 100%, 25% 50%, 0% 0%);
    --shape-chev-left:
      polygon(100% 0, 50% 0, 0% 50%, 50% 100%, 100% 100%, 50% 50%);

    /* 7-angled */
    --shape-heptagon:
      polygon(50% 0%, 90% 20%, 100% 60%, 75% 100%, 25% 100%, 0% 60%, 10% 20%);
    --shape-arr-left:
      polygon(40% 0%, 40% 20%, 100% 20%, 100% 80%, 40% 80%, 40% 100%, 0% 50%);
    --shape-arr-right:
      polygon(0% 20%, 60% 20%, 60% 0%, 100% 50%, 60% 100%, 60% 80%, 0% 80%);
  }
}

@layer props.helpers {
  /* ----------------------------------
   * Helpers
   * ---------------------------------- */

  :where(html) {
    /* Misc helpers to fine control/tune GUI */
    --big-int: 9999;

    /*
      Specs:
        → https://w3c.github.io/wcag/21/guidelines/#target-size
          upd; https://www.w3.org/WAI/standards-guidelines/wcag/new-in-22/#258-target-size-minimum-aa
      Refs:
        → https://w3c.github.io/wcag/understanding/target-size.html
          upd; https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html
    */
    --min-touch-target-size: 44px; /* or 48px by Apple guidelines */
    --rem-tap-size: 2.75rem;
    --btn-min-size: var(--min-touch-target-size);
    --btn-min-hdim: 90px;
    --nav-max-vdim: 60px; /* 8px + 44px + 8px */
    --nav-max-vdim: calc(var(--min-touch-target-size) + var(--spacer) * 2);
  }
}
