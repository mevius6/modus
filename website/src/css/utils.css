@import "utilities/layout-model.css";
@import "utilities/scroll-control.css";

/* https://developer.chrome.com/blog/css-wrapped-2023#trig */

.staggered-anim { /* FIXME: it's more suitable for `dialog[open]` now */
  --delay: calc(var(--i, 1) * 150ms);
  opacity: 0;
  animation: fade-in 1000ms var(--delay) forwards;

  &:nth-child(2) { --i: 2; }
  &:nth-child(3) { --i: 3; }
  &:nth-child(4) { --i: 4; }
  &:nth-child(5) { --i: 5; } /* ~ .75s */
}

/* https://drafts.csswg.org/css-cascade/#all-shorthand
   initial | inherit | unset | revert | revert-layer */
.all-initial { all: initial; }
.all-unset   { all: unset; }
.all-revert  { all: revert; }

/* Stack level
   https://drafts.csswg.org/css2/#stacking-context */
.zi    { z-index: var(--zi, 1) }
.zi-10 { z-index: var(--zi, 10) }
.zi-20 { z-index: var(--zi, 20) }

/* https://web.dev/content-visibility/ */
.content-vis {
  content-visibility: auto;

  /* when E is subject to size containment
     https://wicg.github.io/display-locking/sample-code/contain-intrinsic-size-examples.html */
  contain-intrinsic-size: auto var(--size-containment, 1000px);
}

:where(.is-hidden, .sr-only, :is([data-hidden])) {
  position: absolute;
  width: 1px;
  height: 1px; /* auto */
  padding: 0;
  margin: 0;
  overflow: hidden;
  clip: rect(0 0 0 0);
  white-space: nowrap;
  border: 0;
  clip-path: inset(100%);
} /* —or— */
:is(.visually-hidden) {
  inline-size: 0;
  block-size: 0;
  overflow: hidden;
}

.fixpos { position: fixed }
.abspos { position: absolute }
.relpos { position: relative }

.overlay {
  position: absolute;
  inset: 0;
}

/* top-left */
.inset-start {
  inset-block-start: 0;
  inset-inline-start: 0;
}

/* bottom-right */
.inset-end {
  inset-inline-end: 0;
  inset-block-end: 0;
}

.sticky {
  position: sticky;
  top: var(--offset, 0);
  inset-block-start: var(--offset, 0);
  z-index: 1;
  align-self: start;
}

.abs-centered {
  position: absolute;
  top: 50%;
  inset-block-start: 50%;
  left: 50%;
  inset-inline-start: 50%;
  transform: translate(-50%, -50%);
}

.fit-content {
  width: fit-content;
  inline-size: fit-content;
}

/* Inline and block size overrides */
.inline-fit   { max-inline-size: 100% !important; }
.inline-full  { inline-size: 100% !important; }
.block-fit    { max-block-size: 100% !important; }
.block-full   { block-size: 100% !important; }
.inline-auto  { inline-size: auto !important; }
.block-auto   { block-size: auto !important; }

.m-auto  { margin: auto; }
.mx-auto { margin-inline: auto; }
.my-auto { margin-block: auto; }

[class*=content-wrap] { /* content-wrap(per) */
  /* i.e. min(max-content, max(min-content, stretch)) */
  max-width: fit-content;
  max-height: fit-content;

  /* centered */
  margin-inline: auto;
}

/* A wrapper for content of unknown size */
[class*=overlay-wrap] { /* overlay-wrap(per) */
  position: fixed;
  inset: 0;
  width: fit-content;
  height: fit-content;
  margin: auto;
}

/* TODO: padding utility classes -> (p | px-* | py-* | pt-[10] | etc. )
   or `.spaced-{x|y}` mixin?..
*/

/* https://caniuse.com/#feat=flexbox-gap
   https://github.com/w3c/csswg-drafts/issues/3559 */
.flow > * + * {
  margin-block-start: var(--flow-space, var(--spacer-2x));
}

/* https://github.com/argyleink/open-props/blob/main/src/extra/utilities.css */
[class^=border-between] > * + * {
  --border-style: solid;

  [class*=inline] & {
    border-inline-start-style: var(--border-style);
    border-inline-start-width: var(--line-width, var(--line-md, medium));
  }

  [class*=block] & {
    border-block-start-style: var(--border-style);
    border-block-start-width: var(--line-width, var(--line-thin, thin));
  }
}

[class*=gradient-border],
[class|=gradient-border] {
  border-style: solid;
  border-image-source: var(--border-image, var(--gradient));
  border-image-slice: 1;

  &[class*=inline] {
    border-inline-width: var(--line-width, thin);
    border-image-slice: 0 1;
  }

  &[class*=block] {
    border-block-width: var(--line-width, thin);
    border-image-slice: 1 0;
  }
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.has-outline {
  outline: var(--accent) hidden 4px;
  outline-offset: 2px;
}

/* https://www.w3.org/TR/css-values-4/#example-baa620d3 */
.aspect-ratio-box {
  --ar: calc(16 / 9);
  --w: calc(100% / 3);
  --h: calc(var(--w) / var(--ar));
  width: var(--w);
  height: var(--h);
}

.sqr,
.square {
  aspect-ratio: var(--ratio-square);
}

.space-unset {
  padding-block: unset;
  padding-inline: unset;
}

.force-tap-size {
  min-inline-size: var(--min-touch-target-size);
  min-block-size: var(--min-touch-target-size);
}

.fake-shadow-pass {
  box-shadow: 0 0 25cqmax 15cqmin var(--background) inset;
}

.muted { filter: grayscale() }

.side-fade {
  /* Horizontal scroller edge fade mask */
  --lin-grad-fading: linear-gradient(
    90deg,
    var(--trn),
    var(--background) var(--spacer-2x) calc(100% - var(--spacer-2x)),
    var(--trn));

  mask: var(--mask, var(--lin-grad-fading));
}

.edge-fade {
  mask-image: linear-gradient(
    to right,
    hsl(0 0% 0% / 0),
    hsl(0 0% 0% / 1) 20%,
    hsl(0 0% 0% / 1) 80%,
    hsl(0 0% 0% / 0)
  );
}

/* CSS Scroll Masking
   → https://codepen.io/jh3y/pen/zYQxKjx */

.masked {
  /* mask tldr;
     as the visible percentage increases,
     the masked percentage decreased
     visible starts at 1%
     masked starts at 7%
     for a recreding 7 hard lines mask effect
     (a loop and some calc could generate this)
     ref → https://codepen.io/argyleink/pen/XWPjzgR
   */
  mask: linear-gradient(
    to top,
    #000 1%,     /* 1% visible */
    0%,            /* hard line */
    #0000 8%,    /* 7% masked */
    0%,
    #000 10%,    /* 2% visible */
    0%,
    #0000 16%,   /* 6% masked */
    0%,
    #000 19%,    /* 3% visible */
    0%,
    #0000 24%,   /* 5% masked */
    0%,
    #000 28%,    /* 4% visible */
    0%,
    #0000 32%,   /* 4% masked */
    0%,
    #000 37%,    /* 5% visible */
    0%,
    #0000 40%,   /* 3% masked */
    0%,
    #000 46%,    /* 6% visible */
    0%,
    #0000 48%,   /* 2% masked */
    0%,
    #000 55%,    /* 7% visible */
    0%,
    #0000 56%,   /* 1% invisible */
    0%,
    #000 57%     /* visible til end */
  );
}

.bg-canvas {
  background: canvas;
}

.bg-image { /* TODO: Define utility class */
  background-image: var(--bg-final-image,
    var(--bg-image, /* …, var(--bg-imageN) */)
  );
}

.bg-noise { /* TODO: Add noise variations */
  --noise: url("../images/noise.png");

  background: repeat center/150px var(--noise);
  background-attachment: fixed;
}

.bg-gradient {
  --gradient:
    radial-gradient(
      circle,
      var(--trn) 0%,
      33.333%,
      var(--accent-shade) 100%
    );

  background-image: var(--gradient);
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: 100% 100vh;
}

.strips {
  background:
    linear-gradient(90deg,
      #5461c8 12.5%,
      #c724b1 0 25%,
      #e4002b 0 37.5%,
      #ff6900 0 50%,
      #f6be00 0 62.5%,
      #97d700 0 75%,
      #00ab84 0 87.5%,
      #00a3e0 0)
}

.hashes {
  background:
    repeating-linear-gradient(-45deg,
      #ccc 0 2px,
      transparent 0 9px)
}

/* Isolation creates a new stacking context for mix-blend-mode.
   See: https://developer.mozilla.org/en-US/docs/Web/CSS/isolation */
.isolate {
  isolation: isolate;
  position: absolute;
  inset-block-start: 0;
  inline-size: 100%;
  block-size: 100%;
}

/* TODO */
/* https://grainy-gradients.vercel.app/ */
.grainy-gradient {
  inline-size: 100%;
  block-size: 100%;
  background: radial-gradient(
    ellipse at 70%,
    var(--accent),
    var(--trn)
  ), url("https://grainy-gradients.vercel.app/noise.svg"); /* 500px */
  filter: contrast(150%) brightness(700%);
}

.border-gradient {
  --n: 2;
  --hint: calc(100% - 100% / (var(--n) + 1) * var(--n));

  border-color: var(--border-color, var(--background));
  border-style: solid;
  border-width: var(--_size, .125cqi);

  border-image-source: var(--border-imgsrc,
    linear-gradient(
      45deg,
      var(--c1, transparent),
      var(--hint, 33.333%),
      var(--c2, currentcolor)
    )
  );
  border-image-slice: 1;
  border-image-width: 1;

  &:where(.--voygb) {
    border-image-source: var(--lin-gradient-voygb);
  }
}

.rounded-border-gradient {
  --surface: var(--background);
  --gradient: linear-gradient(to bottom right,#1f005c,#5b0060,#870160,#ac255e,#ca485c,#e16b5c,#f39060,#ffb56b);
  background:
    linear-gradient(
      var(--surface),
      var(--surface)) padding-box,
      var(--gradient) border-box;

  border: solid var(--line-medium) transparent;
  border-radius: var(--radius-2);
}

.text-gradient {
  /* color: transparent; */
  background: linear-gradient(
    to right,
    hsl(98 100% 62%),
    hsl(204 100% 59%)
  );
  -webkit-background-clip: text;
  -webkit-text-fill-color: var(--trn, transparent);

  /* box-decoration-break: clone; */
}

.text-balance { text-wrap: balance; }
.text-pretty  { text-wrap: pretty; }

.text-center { text-align: center; }
.text-left   { text-align: left; }

.caps,
.uppercase,
.text-uppercase { text-transform: uppercase; }

.lowercase,
.text-lowercase { text-transform: lowercase; }

/* https://www.w3.org/TR/css-inline-3/#line-height */
.text-caps-trim {
  --case: 1;

  text-transform: uppercase;
  letter-spacing: var(--letter-spacing-2);
  text-edge: cap alphabetic;
  leading-trim: both;
}

.font-caps { font-variant-caps: all-petite-caps; }
.font-smcp { font-variant-caps: small-caps; }

.ellipse {
  display: -webkit-box;
  overflow: hidden;
  text-wrap: balance;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
}

/* https://drafts.csswg.org/css-inline/#sizing-drop-initials */
.has-dropcap {
  /* https://adrianroselli.com/2019/10/accessible-drop-caps.html#Ideal
     https://css-tricks.com/snippets/css/drop-caps/ */

  &::first-letter {
    initial-letter: 3 drop;
    initial-letter-align: leading;
    margin-inline-end: 1ex;
  }

  @supports not (initial-letter: 2 drop) { /* 🦊 🧭 */
    &::first-letter {
      float: left;
      margin-block-start: .125ch;
      margin-inline-end: .25ch;
      font-family: inherit;
      font-size: calc(var(--cap-size, 5) * 1rem);
      line-height: var(--cap-lh, 1cap);
    }
  }
  @supports not (line-height: 1cap) {
    &::first-letter { --cap-lh: .6 }
  }
}

/* https://drafts.csswg.org/css-writing-modes-4/ */
.sideways {
  writing-mode: vertical-lr;
  text-orientation: sideways;
}

.reverse,
.inverse {
  /* scale: -1; */
  transform: scale(-1);
}

:where([class~=tag]) {
  padding-inline: calc(.5lh / 2);
  line-height: 1.5;
  background: var(--neon-lime);
  border-radius: calc(1cqi / 4);
}

:where([class*=keyline]) {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  gap: var(--spacer-2x);
  inline-size: 100%;

  &::before,
  &::after {
    align-self: center;
    content: '';
    border-top: 0.5px solid var(--border-color);
  }
}

/* https://drafts.csswg.org/css-fonts-3/#propdef-font-variant-numeric */
.format-nums,
.fmt-n {
  /* Enables the display of variants: */
  --lnum-on: lining-nums;
  --onum-on: oldstyle-nums;
  --pnum-on: proportional-nums;
  --tnum-on: tabular-nums;
  --frac-on: diagonal-fractions;
  --afrc-on: stacked-fractions;
  --ordn-on: ordinal;
  --zero-on: slashed-zero;
  --normal: normal; /* <-- turns off all the variants listed above */
  --variants:
    var(--figure)     /* = [ lining-nums | oldstyle-nums ] */
    var(--spacing)    /* = [ proportional-nums | tabular-nums ] */
    var(--fraction);  /* = [ diagonal-fractions | stacked-fractions ] */

  /* OpenType features: */
  --common-set:
    'lnum' var(--lnum, 1),
    'onum' var(--onum, 0),
    'pnum' var(--pnum, 1),
    'tnum' var(--tnum, 0),
    'frac' var(--frac, 0),
    'afrc' var(--afrc, 0),
    'ordn' var(--ordn, 0),
    'zero' var(--zero, 0);

  /* Presets: */
  --oldstyle: 'onum' 1;
  --tabular: 'tnum' 1;
  --frac: 'frac' 1;
  --old-td: var(--oldstyle), var(--tabular); /* <-- for tabular data */
  --old-fr: var(--oldstyle), var(--frac);
  --math: 'lnum' 1, 'afrc' 1, 'zero' 1;

  font-variant-numeric: var(--variants, var(--normal));
  font-feature-settings: var(--features, var(--common-set));
}

/* ----------------------------------- NEW ---------------------------------- */

/* https://developer.chrome.com/blog/entry-exit-animations */
/* :is([class*=loaded], etc…), */
.init-reveal * {
  transition: opacity .5s ease-in;
  @starting-style { opacity: 0 } /* to 1 when it is initially rendered */
}

/* https://12daysofweb.dev/2022/new-viewport-units/ */
.cover-dynamic-viewport {
  width: 100vw;
  width: 100dvi;
  height: 100vh;
  height: 100dvb;
}

/* https://web.dev/articles/min-max-clamp */
.clamp-inline-size {
  --_min: 20ch;
  --_max: 40ch;
  --_sp: 2ch;
  --_th: 50%;

  inline-size: calc(var(--_th) - var(--_sp));
  min-inline-size: var(--_min);
  max-inline-size: var(--_max);
}

.relative-shadow {
  --base: hsl(var(--tint, 214) 80% 27% / calc(var(--alpha, 4) * 1%));
  --shade: hsl(from var(--base) calc(h + 8) 25 calc(l - 5));
  --perfect-shadow:
    0 0 0 1px var(--base),
    0 1px 1px -0.5px var(--shade),
    0 3px 3px -1.5px var(--shade),
    0 6px 6px -3px var(--shade),
    0 12px 12px -6px var(--base),
    0 24px 24px -12px var(--base);
}
