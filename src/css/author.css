body:where([data-id=homepage]) { /* visual tweaks */
  --sketch-bg: light-dark(var(--clear-medium), var(--riso-black));

  & footer {
    --surface: var(--background);
    --gradient: var(--lin-gradient-voygb);

    padding: 1ch 2ex;
    border-radius: 1ch;
    border: .125cqi transparent solid;
    text-shadow: 0 1px 1px hsl(0 0% 0% / 30%);
    box-shadow: 0 1rem 1rem -1rem hsl(0 0% 0% / 90%);
    background:
      linear-gradient(
        var(--surface),
        var(--surface)) padding-box,
        var(--gradient) border-box;
  }

  & footer [itemprop=name] {
    max-inline-size: 12ch;
    font-variation-settings: "wght" 200, "ital" 1;
    padding-inline: .5ch;
    border-image:
      linear-gradient(
        transparent,
        var(--accent),
        transparent
      )
      1 / 1px;
  }

  :where([aria-labelledby=contact]) {
    --_bg: light-dark(hsl(var(--blue-light)), hsl(var(--blue)));

    container-type: inline-size;
    padding: var(--gutter);
    margin-inline: var(--gutter);
    background-color: var(--_bg);
    border-radius: var(--border-radius-2);

    .keyline {
      min-inline-size: calc(100cqi + var(--gutter)*2);
      margin-inline: calc(var(--gutter)*-1);
      gap: .5ch;
    }
  }
  @container (20rem <= width < 32.5rem) {
    .keyline {
      --opsz: 20;
      &::after,
      &::before {
        --border-imgsrc: repeating-linear-gradient(
          -45deg,
          var(--neon-lime) 0 2px,
          var(--neon-purple) 0 4px,
          var(--neon-pink) 0 6px,
          color-mix(in oklab, var(--accent), var(--_bg) 50%) 0 12px
        );
      }
    }
  }

  :where([class*=tag]) {
    font-size: .75rem;
    font-feature-settings: "c2sc" 1;
    letter-spacing: -0.008em; /* 45×18 ~ 5:2 ~ 100×40 */
    transform: translate(
      calc(2/5 * 40 * -1%),
      calc(2/5 * 100 * -1%)
    );
    /* overrides */
    inset-inline-end: unset;
    inset-block-end: unset;
  }

  :where([class*=keyline]) { /* https://codepen.io/hexagoncircle/pen/YjXowe */
    letter-spacing: calc(var(--letter-spacing-3)*-1);

    &::before,
    &::after {
      border-style: solid;
      border-width: var(--line-md) 0 0;
      border-image-source: var(--border-imgsrc, var(--to-left));
      --to-left: linear-gradient(-90deg, var(--c1), 33.333%, var(--c2));
      --to-right: linear-gradient(90deg, var(--c1), 33.333%, var(--c2));
      border-image-slice: 1;
      border-image-width: 1;
      --c1: color-mix(in oklab, var(--accent), var(--_bg) 80%);
      --c2: var(--accent);
    }

    :where([data-theme-style=light] &) {
      &::after { --border-imgsrc: var(--to-right); }
    }
    :where([data-theme-style=dark] &) {
      &::before { --border-imgsrc: var(--to-right); }
    }
  }
}

/* CSS Noise Gradient (shadow)
   → https://codepen.io/cjimmy/pen/XWRQPep */
@layer {
  :has(>.sketch) {
    background: var(--sketch-bg, canvas);
  }
  svg > text {
    --_size: 12.5rem;
    --_dy: calc(var(--size) * .35);
    --_variations:
      "opsz" 48,
      "wght" 500,
      "ital" 1;
    --_features:
      "kern" on,
      "rvrn" off,
      "liga" on,
      "dlig" on,
      "smcp" on;
  }
  .sketch {
    --_noise: url(https://grainy-gradients.vercel.app/noise.svg);
    inline-size: 250px;
  }
  .ball {
    z-index: 1;
    inline-size: 250px;
    aspect-ratio: var(--ratio-1);
    border-radius: calc(var(--big-int)*1px);
    overflow: hidden;

    & [class*=light] {
      inline-size: 100%;
      block-size: 100%;
      background: radial-gradient(circle at 67% 30%, lightsalmon, crimson);
      mix-blend-mode: multiply;
    }
    & [class*=shadow] {
      block-size: 100%;
      background-image:
        radial-gradient(circle at 65% 35%, var(--trn), mediumblue),
        var(--_noise);
      filter: contrast(120%) brightness(900%);
    }
  }
  .ground {
    inline-size: 150%;
    block-size: 140px;
    inset-block-end: -10px;
    inset-inline-start: -65%;
    transform: rotateZ(7deg);
    mix-blend-mode: multiply;

    & [class*=shadow] {
      inline-size: 95%;
      block-size: 140px;
      border-radius: 50%;
      background:
        radial-gradient(ellipse at 70%, navy, var(--trn)),
        var(--_noise);
      filter: contrast(150%) brightness(700%);
    }
  }
}

@layer layouts.header {
  .page__header {
    background:
      linear-gradient(to bottom,
        hsl(var(--honeydew) / .15),
        33.333%,
        hsl(var(--honeydew) / 0) 75%
      );
    backdrop-filter: brightness(80%);
  }
}

@layer layouts.nav {
  .nav {
    container-name: nav;
    container-type: inline-size;

    :where([data-theme-style=light]) & {
      backdrop-filter: blur(var(--blur-os));
    }
    :where([data-theme-style=dark]) & {
      /* Refs
         https://codepen.io/argyleink/pen/rNxrPMq
         https://codepen.io/argyleink/pen/GRZoQLB
      */
      background: linear-gradient(127deg,
        hsl(var(--tn-lemon-tonic) / .75),
        calc(100% - (100% / 3 * 2)),
        hsl(var(--tn-pink-glo) / .5),
        calc(100% - (100% / 3 * 1) + 25%),
        hsl(var(--tn-atomic-blue) / .25)
      );
      backdrop-filter: var(--smooth-glass);
    }
  }

  .nav__items {
    display: flex;
    flex-direction: column;
  }

  @container (orientation: landscape) { /* TODO */
    /* .nav__items {
      flex-direction: row;
      gap: 1.5rem;
    } */
  }

  .nav__link {
    font-size: clamp(1.5rem, 2.5vw + 1rem, 3rem);
    line-height: normal;
    min-block-size: var(--min-touch-target);
  }
}

@layer theme.support.page {
  body:has(> aside > nav) {
    display: grid;
    grid: [stack] 1fr / min-content [stack] 1fr;
    & > * { grid-area: stack; }
    & main { contain: layout; }
  }

  h1 {
    max-inline-size: min(40ch, 80vw);
    line-height: 1cap;
  }

  article {
    padding-inline: var(--gutter);
  }
}

@layer utilities.grid {
  .cols-triptych {
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
    column-gap: 1cqi;
    align-items: center;
    padding-inline: var(--gutter);

    & img {
      /* object-fit: contain; */
      object-fit: cover !important;
      min-block-size: 100%;
    }

    & > * {
      grid-column: var(--line);
      grid-row: 1;
    }
    /* & > :first-child { --line: 1; } */
    /* & > :last-child  { --line: 5; } */

    & > :is(:first-child, :last-child) {
      & :is(img, svg) {
        aspect-ratio: 3 / 5 !important;
      }
    }

    & > :not(:first-child, :last-child) {
      --line: 2 / 5;
      & :is(img, svg) {
        aspect-ratio: 7 / 5 !important;
        /* aspect-ratio: 3 / 2; */
      }
    }
  }

  ul :where(figure, picture:not(+picture)) {
    overflow: hidden;
    aspect-ratio: 3 / 2;

    & > img {
      inline-size: 100%;
      block-size: 100%;
      /* object-fit: contain; */
      margin: auto;
    }
  }

  ul :where(figure:has(figcaption)) {
    display: grid;
    margin: 0;
    grid-template-rows: 1fr auto;
    font: inherit;

    & > img {
      grid-row: 1 / -1;
      grid-column: 1;
    }

    & > figcaption {
      font-family: inherit;
      font-size: 1rem;
    }
  }
}

/* TODO: Плавные переходы с помощью View Transition API */
/* https://developer.chrome.com/docs/web-platform/view-transitions
   https://developer.chrome.com/blog/view-transitions-update-io24 */

@layer theme {
  body { --var-serif: Roslindale; }
}

@layer theme.color.ui-adjust {
  :where(html[data-theme-style=light]) {
    --bg-hsl: var(--warm-white-3);
  }

  :where(html[data-theme-style=dark]) {
    /* --accent-hsl: var(--coral); */
    --bg-hsl: var(--green-dark);
  }
}

@layer theme.color.palettes {
  /*
   → https://www.sherwin-williams.com/en-us/color/color-collections/colormix-forecast/2024 */

  :where(html) {
    --green-dark: var(--sw-night-watch);
    --blue-light: var(--sw-upward, powderblue); /* SW COTY 2024 */
    --blue: var(--sw-georgian-bay);
    --honeydew: var(--sw-honeydew, honeydew); /* SW COTM June */
    --maroon: var(--sw-carnelian, maroon);
  }
}

@layer theme.color.swatches {
  :where(html) {
    /* TODO: Add RISO inks palette */
    --riso-black: hsl(30deg 3% 13%); /* #21201F */
    --clear-medium: var(--off-white-5);
  }
  /* @layer riso {} */
}

@layer reset {
  /* picture:has(> img) { display: contents } */
}
